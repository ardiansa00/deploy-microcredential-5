# -*- coding: utf-8 -*-
"""TelU7_Assigment Tugas Akhir 5_Kelompok 5

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1RFfaa3NyG8DMU90yHlVhfgRN73yj16XE
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

df = df= pd.read_csv('/content/seattleWeather_1948-2017.csv')

print(df.shape)
df.head()

"""Visualisasi Data"""

plt.figure(figsize=(12, 7))
sns.boxplot(x='RAIN',y='TMAX',data=df,palette='winter')

sns.displot(data=df, x='TMIN', y='TMAX', hue='RAIN', kind='kde')

df['PRCP'].plot(kind='hist',bins=30,color='blue',figsize= (16,7))

corr = df.corr()
sns.heatmap(data=df.corr(),annot=True,cmap="coolwarm",linewidths=1,fmt=".2f",linecolor="orange")

sns.pairplot(df, palette="husl",hue='RAIN')

df['rain']=[1 if i==True else 0 for i in df['RAIN']]

from sklearn.model_selection import train_test_split

df.columns

df.info()

df.dropna(inplace=True)

# Data Proccesing
from sklearn.preprocessing import StandardScaler
scaler = StandardScaler()
x_train = scaler.fit_transform(x_train)
x_test = scaler.transform(x_test)

# Model selection pada Train Test
from sklearn.model_selection import train_test_split
from sklearn.metrics import classification_report
from sklearn import metrics

x = df[['PRCP', 'TMAX', 'TMIN']]
y = df['RAIN']

x.shape, y.shape

x_train, x_test, y_train, y_test = train_test_split(x, y, test_size=0.25, random_state=42)

"""
# ANN
```
# Metode ANN
```

"""

import numpy as np
import pandas as pd

df = pd.read_csv('/content/seattleWeather_1948-2017.csv')

df.head()

df.info()

"""# Mengecek Nilai yang hilang / Missing Value
Missing values adalah nilai yang tidak terdefinisi di dataset. Bentuknya beragam, bisa
berupa blank cell, ataupun simbol-simbol tertentu seperti NaN (Not a Number), NA (Not
Available), ?, -, dan sebagainya. Missing values dapat menjadi masalah dalam analisis data
serta tentunya dapat mempengaruhi hasil modelling machine learning. Dari hasil diatas
dataset tsb mengandung 2 data missing values pada kolom/field 'SepalLengthCm' dan
beberapa outliers!

"""

df.isnull().sum()

"""Menentukan x dan y pada data"""

X = df.iloc[:,1:4]
y = df.iloc[:,4]

from sklearn.preprocessing import LabelEncoder
labelencoder_y = LabelEncoder()
y[:] = labelencoder_y.fit_transform(y[:])
y = y[:]

# Memisahkan dataset Training set and Test set
from sklearn.model_selection import train_test_split
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.2, random_state = 0)

# Feature Scaling
from sklearn.preprocessing import StandardScaler
sc = StandardScaler()
X_train = sc.fit_transform(X_train)
X_test = sc.transform(X_test)

import keras 
from keras.layers import Dense
from keras.models import Sequential
from keras.layers import Dropout

# Inisialisasi ANN
classifier = Sequential()

# Adding the input layer and the first hidden layer
classifier.add(Dense(units = 32, kernel_initializer = 'uniform', activation = 'relu', input_dim = 3))

# Adding the second hidden layer
classifier.add(Dense(units = 16, kernel_initializer = 'uniform', activation = 'relu'))

# Adding the third hidden layer
classifier.add(Dense(units = 8, kernel_initializer = 'uniform', activation = 'relu'))

# Adding the output layer
classifier.add(Dense(units = 1, kernel_initializer = 'uniform', activation = 'sigmoid'))

# Compiling the ANN
classifier.compile(optimizer = 'adam', loss = 'binary_crossentropy', metrics = ['accuracy'])

# Fitting the ANN to the Training set
classifier.fit(X_train, y_train, batch_size = 10, epochs = 100)

# Predicting the Test set results
y_pred = classifier.predict(X_test)
y_pred = (y_pred > 0.5)

print(y_pred)

model = Sequential([
    Dense(32, activation='relu', input_dim=3),
    Dropout(0.5),
    Dense(16, activation='relu'),
    Dense(1, activation='sigmoid')
])
model.compile(optimizer='adam', loss='mean_squared_error', metrics=['accuracy'])
model.summary()